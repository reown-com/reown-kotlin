package com.reown.android

import com.reown.android.internal.common.signing.eip6492.EIP6492Verifier
import kotlinx.coroutines.runBlocking
import org.junit.Assert.assertTrue
import org.junit.Test
import uniffi.yttrium.Erc6492Client

class EIP6492Tests {

    @Test
    fun verifySignatureTest() {
        // Test data
        val chainId = "eip155:1"
        val projectId = "18f69a420fce7f005dc43f74e6404be7"
        val message = """
            sample.kotlin.modal wants you to sign in with your Ethereum account:
            0x4e4F3B4658590d1bbEC624F70067E8410A496164

            I accept the Terms of Service: https://yourDappDomain.com/

            URI: https://web3inbox.com/all-apps
            Version: 1
            Chain ID: 1
            Nonce: de8c222880278be8f2a10e3b
            Issued At: 2025-06-16T13:32:49+02:00
        """.trimIndent()

        val signature = "0x0000000000000000000000004e1dcf7ad4e460cfd30791ccc4f9c8a4f820ec67000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000003241688f0b900000000000000000000000041675c099f32341bf84bfc5382af534df5c7461a0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000007a6733696a79300000000000000000000000000000000000000000000000000000000000000000000284b63e800d0000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000100000000000000000000000038869bf66a61cf6bdb996a6ae40d5853fd43b5260000000000000000000000000000000000000000000000000000000000000140000000000000000000000000a581c4a4db7175302464ff3c06380bc3270b40370000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000fe8b52243955ca9c85702aab2b7e248a9d77b0bc00000000000000000000000000000000000000000000000000000000000001048d80ff0a000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000b9018ecd4ec46d4d2a6b64fe960b3d64e8b94b2234eb000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000648d0dc49f00000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000001000000000000000000000000a581c4a4db7175302464ff3c06380bc3270b4037000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000041ff0a61a1fea243070dba2b3e9ea70e0415bed8f972c6939ab6dde0a1f44ecd7d79edcbe2b1411be9f4050c5e58b5e03a6219ff5598df0d01b2c866d01377d2b71f000000000000000000000000000000000000000000000000000000000000006492649264926492649264926492649264926492649264926492649264926492"
        val address = "0x4e4F3B4658590d1bbEC624F70067E8410A496164"
        // Initialize EIP6492Verifier
        EIP6492Verifier.init(chainId, projectId)

        // Verify the signature
        val isValid = EIP6492Verifier.verify6492(
            originalMessage = message,
            address = address,
            signature = signature
        )

        // Assert that the signature is valid
        assertTrue("EIP6492 signature verification should succeed", isValid)
    }

    @Test
    fun verifyMultiSigTest() {
        // Test data
        val safeChainId = "eip155:11155111"
        val projectId = "18f69a420fce7f005dc43f74e6404be7"
        val safeSignature =
            "0x6037120d3995a626caa8dac775220ef5c91ece120a8ffa599bf28dbd1c40f1e1398cb941dd9fc4e880b988f279c603cedf7fe0609aa2b9cad829861d9798803b1be2a4308f50367f32a84baa7965102c87ab22db69a70ba3d3717f951e07007fea5901c524425171f8ff9143b64fe3223155a26ee0aab54b03058ab99187bc5ad71c"
        val safeAddress = "0x9a1148b5D6a2D34CA46111379d0FD1352a0ade4a"
        val messageHash = "0xb48c43838346726a55fe0023cd2fc14b26144b6a9d36284a436b62e934bf382d"
        // Initialize EIP6492Verifier
        val rpcUrl = "https://rpc.walletconnect.com/v1?chainId=$safeChainId&projectId=$projectId"
        val client = Erc6492Client(rpcUrl)

        runBlocking {
            // Verify the signature
            val isValid = client.verifySignature(
                messageHash = messageHash,
                address = safeAddress,
                signature = safeSignature
            )

            // Assert that the signature is valid
            assertTrue("EIP6492 signature verification should succeed", isValid)
        }
    }
}