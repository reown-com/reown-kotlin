import com.reown.android.internal.common.model.TransportType;
import kotlin.String;

CREATE TABLE JsonRpcHistoryDao(
  id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
  request_id INTEGER UNIQUE NOT NULL,
  topic TEXT NOT NULL,
  method TEXT NOT NULL,
  body TEXT NOT NULL,
  response TEXT AS String,
  transport_type TEXT AS TransportType
);

insertOrAbortJsonRpcHistory:
INSERT OR ABORT INTO JsonRpcHistoryDao (request_id, topic, method, body, transport_type)
VALUES (?, ?, ?, ?, ?);

updateJsonRpcHistory:
UPDATE JsonRpcHistoryDao
SET response = ?
WHERE request_id = ?;

deleteJsonRpcHistory:
DELETE FROM JsonRpcHistoryDao
WHERE topic = ?;

deleteJsonRpcHistoryByRequestId:
DELETE FROM JsonRpcHistoryDao
WHERE request_id = ?;

doesJsonRpcNotExist:
SELECT NOT EXISTS (
    SELECT 1
    FROM JsonRpcHistoryDao
    WHERE request_id = ?
    LIMIT 1
);

getJsonRpcHistoryRecord:
SELECT request_id, topic, method, body, response, transport_type
FROM JsonRpcHistoryDao
WHERE  request_id = ?;

getJsonRpcRecordsByTopic:
SELECT request_id, topic, method, body, response, transport_type
FROM JsonRpcHistoryDao
WHERE topic = ?;

getJsonRpcRecords:
SELECT request_id, topic, method, body, response, transport_type
FROM JsonRpcHistoryDao;

getPendingSessionRequests:
SELECT request_id, topic, method, body, response, transport_type
FROM JsonRpcHistoryDao
WHERE method = "wc_sessionRequest" AND response IS NULL;

selectLastInsertedRowId:
SELECT last_insert_rowid();