name: Build Debug APKs

on:
  workflow_dispatch:
    inputs:
      build_variant:
        description: 'Build variant to use'
        required: true
        default: 'internal'
        type: choice
        options:
          - internal
          - debug

jobs:
  build_debug_apks:
    strategy:
      matrix:
        conf: [
          { name: wallet, module: ":sample:wallet" },
          { name: dapp, module: ":sample:dapp" },
        ]
    name: Build ${{ matrix.conf.name }} APK
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
          architecture: x86_64
          cache: 'gradle'

      - name: Setup Required files to build samples
        with:
          GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}
          FIREBASE_SERVICE_CREDENTIALS: ${{ secrets.FIREBASE_SERVICE_CREDENTIALS }}
          SECRETS_PROPERTIES: ${{ secrets.SECRETS_PROPERTIES }}
          ENCODED_STRING_DEBUG: ${{ secrets.WC_KOTLIN_DEBUG_KEYSTORE }}
          SIGNING_KEY_STORE_PATH_DEBUG: ${{ secrets.WC_KOTLIN_DEBUG_KEYSTORE_PATH }}
          ENCODED_STRING_INTERNAL: ${{ secrets.WC_KOTLIN_INTERNAL_KEYSTORE }}
          SIGNING_KEY_STORE_PATH_INTERNAL: ${{ secrets.WC_KOTLIN_INTERNAL_KEYSTORE_PATH }}
          ENCODED_STRING_UPLOAD: ${{ secrets.WC_KOTLIN_UPLOAD_KEYSTORE }}
          SIGNING_KEY_STORE_PATH_UPLOAD: ${{ secrets.WC_KOTLIN_UPLOAD_KEYSTORE_PATH }}
        uses: ./.github/actions/ci_setup

      - name: Build APK - ${{ github.event.inputs.build_variant }}
        env:
          WC_CLOUD_PROJECT_ID: ${{ secrets.WC_CLOUD_PROJECT_ID }}
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          NOTIFY_INTEGRATION_TESTS_PROJECT_ID: ${{ secrets.NOTIFY_INTEGRATION_TESTS_PROJECT_ID }}
          NOTIFY_INTEGRATION_TESTS_SECRET: ${{ secrets.NOTIFY_INTEGRATION_TESTS_SECRET }}
          MIX_PANEL: ${{ secrets.MIX_PANEL }}
        run: |
          echo "Building ${{ matrix.conf.name }} with variant: ${{ github.event.inputs.build_variant }}"
          ./gradlew ${{ matrix.conf.module }}:assemble${{ github.event.inputs.build_variant == 'internal' && 'Internal' || github.event.inputs.build_variant == 'debug' && 'Debug' || 'Release' }}

      - name: Analyze built APK
        run: |
          echo "=== APK Analysis for ${{ matrix.conf.name }} ==="
          find sample/${{ matrix.conf.name }}/build/outputs/apk -name "*.apk" -exec ls -la {} \;
          
          for apk in sample/${{ matrix.conf.name }}/build/outputs/apk/**/*.apk; do
            if [ -f "$apk" ]; then
              echo "=== Analyzing: $apk ==="
              aapt dump badging "$apk" | grep -E "package:|application-label:|platformBuildVersionName:"
              aapt dump badging "$apk" | grep -E "uses-permission:"
              echo "APK size: $(du -h "$apk" | cut -f1)"
              echo "---"
            fi
          done

      - name: Upload ${{ matrix.conf.name }} APK
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.conf.name }}-${{ github.event.inputs.build_variant }}-apk
          path: sample/${{ matrix.conf.name }}/build/outputs/apk/**/*.apk
          retention-days: 30
          if-no-files-found: error

  summary:
    needs: build_debug_apks
    runs-on: ubuntu-latest
    steps:
      - name: Build Summary
        run: |
          echo "## ðŸ“± APKs Built Successfully!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Download Instructions:" >> $GITHUB_STEP_SUMMARY
          echo "1. Go to the **Artifacts** section below" >> $GITHUB_STEP_SUMMARY
          echo "2. Download the APK files you need" >> $GITHUB_STEP_SUMMARY
          echo "3. Install on your device using: \`adb install -r your-app.apk\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Built Variants:" >> $GITHUB_STEP_SUMMARY
          echo "- **Wallet**: \`wallet-${{ github.event.inputs.build_variant }}-apk\`" >> $GITHUB_STEP_SUMMARY
          echo "- **DApp**: \`dapp-${{ github.event.inputs.build_variant }}-apk\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Debugging Tips:" >> $GITHUB_STEP_SUMMARY
          echo "- Use \`adb logcat\` to see runtime logs" >> $GITHUB_STEP_SUMMARY
          echo "- Check \`adb shell dumpsys activity activities\` for activity state" >> $GITHUB_STEP_SUMMARY
          echo "- Use \`adb shell screencap /sdcard/screenshot.png\` to capture screens" >> $GITHUB_STEP_SUMMARY 